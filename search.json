[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Om meg",
    "section": "",
    "text": "Torodd her üëã Eg jobbar som lektor p√• vidareg√•ande. Underviser i matematikk, geofag og geografi. Interessert i teknologibruk i skulen, og spesielt programmering (s√• interessert at eg har skrive masteroppg√•ve i emnet üòÖ)\nJobbar stadig med √• utvikla den profesjonsfaglege digitale kompetansen (PfDK), s√• denne bloggen er ein del av dette‚Ä¶\nP√• denne bloggen kjem eg til √• dela nokre digitale tips og triks samt litt tankar og erfaringar knytt til programmering i matematikk og geofag üåã"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Heim",
    "section": "",
    "text": "Innlegg\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrunnleggjande simulering i NumPy\n\n\n3 min\n\n\n\nprogrammering\n\n\ns-matte\n\n\nsimulering\n\n\ntips\n\n\n\n\n\n\n\nFeb 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHydrologiprogrammering\n\n\n4 min\n\n\n\nmodellering\n\n\nprogrammering\n\n\ntips\n\n\ngeofag\n\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nZotero - kva, kvifor, korleis?\n\n\n4 min\n\n\n\nverkt√∏y\n\n\nkjelder\n\n\ntips\n\n\n\n\n\n\n\nJan 27, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/230127_zotero/index.html",
    "href": "posts/230127_zotero/index.html",
    "title": "Zotero - kva, kvifor, korleis?",
    "section": "",
    "text": "Zotero er eit verkt√∏y for √• handtera kjelder og siteringar. Det er relativt enkelt √• bruka, og kan nyttast p√• tvers av ulike platformar og programvare. Terskelen for √• implementera Zotero i undervisinga kan kanskje opplevast som litt h√∏g. S√• her kjem eit par argument for kvifor det kan vera ein fordel √• ta dette steget, samt eit par konkrete tips og triks üöÄ"
  },
  {
    "objectID": "posts/230127_zotero/index.html#organisere-biblioteket",
    "href": "posts/230127_zotero/index.html#organisere-biblioteket",
    "title": "Zotero - kva, kvifor, korleis?",
    "section": "Organisere biblioteket",
    "text": "Organisere biblioteket\nN√•r du har lasta ned Zotero startar du med eit tomt bibliotek. Dette kan du organisera i samlingar (mapper). Du lager nye samlingar med √• trykka p√• knappen til venstre over Mitt bibliotek\n\n\n\nOrganisere biblioteket\n\n\nHer kan ein t.d. dela inn etter fag, etter √•rstrinn eller andre inndelingar slik ein √∏nsker. Det er mogleg √• ha under-samlingar viss ein √∏nsker det."
  },
  {
    "objectID": "posts/230127_zotero/index.html#legge-til-kjelder",
    "href": "posts/230127_zotero/index.html#legge-til-kjelder",
    "title": "Zotero - kva, kvifor, korleis?",
    "section": "Legge til kjelder",
    "text": "Legge til kjelder\nN√•r ein skal fylla biblioteket sitt gjer ein dette p√• fleire ulike m√•tar. Her vil eg demonstrera korleis ein gjer det\n\nmanuelt\nmed Zotero Connector\nmagisk üßô\n\nLegge til manuelt\n\n\n\n\n\nFor √• legga til kjelder trykker ein p√• det gr√∏ne pluss-teiknet og vel ein passande type (t.d. bok). N√•r ein har gjort dette f√•r ein opp ei kolonne til h√∏gre med ulike felt som m√• fyllast ut:\n\n\n\n\n\n\n\n\n\n\n\nTips\n\n\n\nP√• sidene til kjeldekompasset finn ein informasjon om kva felt som m√• fyllast ut.  Her er eit d√∏me p√• kapittel i bok med redakt√∏r (i APA7-stil)\n\n\nMed Zotero Connector\nZotero Connector er ein plugin til nettlesar som gjer at ein automatisk kan legga kjelder p√• nett inn i biblioteket sitt. Her kan ein ta med snapshot av nettsida ein bes√∏ker, eller lasta ned pdf-dokumentet ein er inne p√•. Ein kan √≤g velga kva for samling i biblioteket den aktuelle ressursen skal lagrast til\n\n\n\n\n\n\n\n\n\n\n\nPass p√•\n\n\n\nDet er ikkje alltid at alle felt vert rett fylt ut i Zotero, s√• dette m√• dobbelsjekkast (gjerne opp mot kildekompasset)\n\n\nMagisk\nNokre kjelder som b√∏ker og forskingsartiklarkan leggast inn ved hjelp av identifikatorar som ISBN, DOI, PMID osb. D√• trykker ein p√• tryllestav-knappen til h√∏gre for den vanlege ‚Äúlegg til‚Äù-knappen. For ein del norske b√∏ker fungerer dette ofte ikkje, men for forskingsartiklar med DOI passar det godt."
  },
  {
    "objectID": "posts/230127_zotero/index.html#sitere-i-tekstbehandlar",
    "href": "posts/230127_zotero/index.html#sitere-i-tekstbehandlar",
    "title": "Zotero - kva, kvifor, korleis?",
    "section": "Sitere i tekstbehandlar",
    "text": "Sitere i tekstbehandlar\nI Microsoft Word og Google Docs er det eigne Zotero-verkt√∏y. N√•r du har lasta ned og innstallert Zotero vil du sj√• dette neste gong du opnar Word.\n\n\n\n\n\nHer ligg det verkt√∏y for √• legga inn referansar i tekst og kjeldeliste/bibliografi til slutt. For √• legge inn referanse i teksten trykker ein p√• Add/Edit Citation og s√∏ker etter kjelda i s√∏kefeltet. F√∏rste gang blir du bedt om √• velga siteringsstil. Eg nyttar vanlegvis APA7 (American Psychological Association).\n\n\n\n\n\nOm du vil inkludera sidetal, kan du klikka p√• den valgte kjelda og legga inn dette manuelt. D√• vil Zotero automatisk formatera referansen i teksten p√• rett m√•te (og p√• rett spr√•k).\n\n\n\n\n\nTil slutt kan du laga kjeldeliste av dei kjeldene som er nytta i teksten med √• trykka p√• Add/Edit Bibliography. Denne vert automatisk sortert og formatert etter valgt referansestil."
  },
  {
    "objectID": "posts/230127_zotero/index.html#sitere-utanfor-tekstbehandlar",
    "href": "posts/230127_zotero/index.html#sitere-utanfor-tekstbehandlar",
    "title": "Zotero - kva, kvifor, korleis?",
    "section": "Sitere utanfor tekstbehandlar",
    "text": "Sitere utanfor tekstbehandlar\nI presentasjonsverkt√∏y som PowerPoint har ein ikkje innebygde Zotero-verkt√∏y. Likevel er Zotero til god hjelp. Ein m√•te ein kan halda oversikt over kva kjelder ein har nytta i eit aktuelt prosjekt er gjennom √• legga til emneord til dei ulike kjeldene. Til d√∏mes blogg-zotero. D√• kan ein s√∏ka og filtrera biblioteket sitt etter det spesifikke emneordet. Vidare kan ein d√• kopiera henvising (shift+cmd/windows+A) av den valgte kjelda. Ein kan til slutt markera alle kjeldene og kopiera bibliografi (shift+cmd/windows+C)."
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html",
    "href": "posts/230202_hydrologimodellering/index.html",
    "title": "Hydrologiprogrammering",
    "section": "",
    "text": "üì∑ Dettifoss, Island"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#importere-bibliotek",
    "href": "posts/230202_hydrologimodellering/index.html#importere-bibliotek",
    "title": "Hydrologiprogrammering",
    "section": "Importere bibliotek",
    "text": "Importere bibliotek\nVassf√∏ringsdataa er lasta ned i csv-format. Me bruker pandas for √• jobba med dette effektivt. I tillegg vert det litt plotting og matematikk, s√• me treng pyplot og numpy i tillegg.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#opprette-dataramme",
    "href": "posts/230202_hydrologimodellering/index.html#opprette-dataramme",
    "title": "Hydrologiprogrammering",
    "section": "Opprette dataramme",
    "text": "Opprette dataramme\nCSV-fila med vassf√∏ringsdata les me inn i ei dataramme (dataframe). Viss ein tar ein kikk p√• fila ser ein at det er brukt semikolon for √• skilja verdiane, det er to rader f√∏r verdiane kjem. Me lagar litt forenkla namn p√• kolonnene, og les inn data. I tillegg er det nytta komma (og ikkje punktum) som desimalteikn.\n\n\n\nüîç Dei f√∏rste linjene\n\n\n\ndf = pd.read_csv(\n    \"vassforing_reinsnos_dogn.csv\", \n    sep = \";\", \n    skiprows = 2, \n    names = [\"dato\", \"Vassf√∏ring\", \"Korrigert\", \"Kontrollert\"], \n    parse_dates = True, \n    decimal=\",\"\n)\n\ndf.index = pd.to_datetime(df['dato']) \ndf.index = pd.to_datetime(df.index.date)\ndf = df.drop(columns = [\"dato\", \"Korrigert\", \"Kontrollert\"])\n\nSjekkar dei nyaste fem m√•lingane i tabellen for √• sj√• at alt ser ok ut.\n\ndf.tail()\n\n\n\n\n\n  \n    \n      \n      Vassf√∏ring\n    \n  \n  \n    \n      2023-01-24\n      1.299365\n    \n    \n      2023-01-25\n      1.593457\n    \n    \n      2023-01-26\n      2.128418\n    \n    \n      2023-01-27\n      2.322153\n    \n    \n      2023-01-28\n      2.324195\n    \n  \n\n\n\n\nI tillegg kan me pr√∏va √• plotta verdiane i dataramma.  Har med ; for √• unng√• √• visa meldinga <AxesSubplot: >\n\ndf.plot();\n\n\n\n\n\n\n\n\nMe ser her at dette ikkje er spesielt nyttig eller informativt, men grafen viser oss at det p√• 1920-talet er eit par √•r utan m√•lingar. Korleis dette kan fiksast kjem me attende til litt seinare."
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#middelflom",
    "href": "posts/230202_hydrologimodellering/index.html#middelflom",
    "title": "Hydrologiprogrammering",
    "section": "Middelflom",
    "text": "Middelflom\nMiddelflommen til ei elv er rekna ut fr√• den st√∏rste d√∏gnvassf√∏ringa per √•r over eit lengre tidsrom. Fr√• NVE/varsom.no finn me denne definisjonen:\n\nEn middelflom (normal flom) defineres som gjennomsnittet av h√∏yeste vannf√∏ring hvert √•r i en lang √•rrekke.\n\nFor √• rekna ut dette m√• me alts√• f√∏rst finna den maksimale vassf√∏ringa per √•r. Bruker groupby i Pandas for √• finne dette.\n\n√•rleg_vf_maks = df.groupby(by=[df.index.year]).max()\n√•rleg_vf_maks.head()\n\n\n\n\n\n  \n    \n      \n      Vassf√∏ring\n    \n  \n  \n    \n      1917\n      26.98031\n    \n    \n      1918\n      50.93218\n    \n    \n      1919\n      37.72713\n    \n    \n      1920\n      63.26006\n    \n    \n      1921\n      58.04514\n    \n  \n\n\n\n\nPlottar den nye dataramma √•rleg_maks som kun har ei m√•ling per √•r:\n\n√•rleg_vf_maks.plot();\n\n\n\n\n\n\n\n\nP√• grunn av ‚Äúholet‚Äù i m√•lingane tar me berre med data fr√• 1930 eller seinare med oss vidare. I tillegg er det vinter (og sn√∏/is) for dataa me har for 2023, s√• me avgrensar til 2022.\n\n√•rleg_vf_maks = √•rleg_vf_maks.loc[1930:2022]\n√•rleg_vf_maks.head()\n\n\n\n\n\n  \n    \n      \n      Vassf√∏ring\n    \n  \n  \n    \n      1930\n      43.82251\n    \n    \n      1931\n      46.29647\n    \n    \n      1932\n      52.52979\n    \n    \n      1933\n      68.09634\n    \n    \n      1934\n      48.32775\n    \n  \n\n\n\n\nMe vil finna gjennomsnittleg st√∏rste √•rlege vassf√∏ring over fleire √•r. Vel her √• sj√• p√• eit gjennomsnitt p√• 30 √•r om gongen. Bruker funksjonen rolling og mean i kombinasjon. rolling gjer at me kan g√• gjennom dataramma og sj√• p√• dei 30 tidlegare verdiane til kvar rad i tabellen og finna gjennomsnittet (mean) i dette rullande vinduet.\n\nmaksvf_og_middelflom = √•rleg_vf_maks.copy()\nmaksvf_og_middelflom[\"Middelflom\"] = √•rleg_vf_maks.rolling(window = 30).mean()\n\nSer p√• dei f√∏rste 5 radene\n\nmaksvf_og_middelflom.head()\n\n\n\n\n\n  \n    \n      \n      Vassf√∏ring\n      Middelflom\n    \n  \n  \n    \n      1930\n      43.82251\n      NaN\n    \n    \n      1931\n      46.29647\n      NaN\n    \n    \n      1932\n      52.52979\n      NaN\n    \n    \n      1933\n      68.09634\n      NaN\n    \n    \n      1934\n      48.32775\n      NaN\n    \n  \n\n\n\n\nSer at dei fem f√∏rste radene i den nye dataramma er NaN (not a number). Dette skjer fordi ein ikkje kan ta gjennomsnitt av dei siste 30 √•ra f√∏r det har g√•tt 30 √•r‚Ä¶ Sjekkar dei nyaste radene i staden:\n\nmaksvf_og_middelflom.tail()\n\n\n\n\n\n  \n    \n      \n      Vassf√∏ring\n      Middelflom\n    \n  \n  \n    \n      2018\n      73.75180\n      60.571163\n    \n    \n      2019\n      47.75206\n      59.893282\n    \n    \n      2020\n      78.19958\n      60.860965\n    \n    \n      2021\n      46.81937\n      60.837067\n    \n    \n      2022\n      73.51824\n      60.972971\n    \n  \n\n\n\n\nPlottar dataramma og ser korleis dei nye verdiane ser ut:\n\nmaksvf_og_middelflom.plot();"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#modellering-av-middelflom",
    "href": "posts/230202_hydrologimodellering/index.html#modellering-av-middelflom",
    "title": "Hydrologiprogrammering",
    "section": "Modellering av middelflom",
    "text": "Modellering av middelflom\nSer at trenden er oppadg√•ande og relativt line√¶r. √ònsker √• laga ein line√¶r modell. Bruker polyfit fr√• NumPy.\n\n# √•ra me har data p√• middelflom\n# fr√• og med 1959 til men ikkje med 2023\nx = np.arange(1959, 2023) \n\n# finn koeffesientane til f√∏rstegradspolynomet\na, b = np.polyfit(x, maksvf_og_middelflom[\"Middelflom\"].loc[1959:2022], 1)\n\n# definerer line√¶r funksjon\ndef f(x):\n    return a*x + b\n\n# plottar dataramma\nmaksvf_og_middelflom.plot(\n    figsize = (20,9), \n    grid = True, \n    fontsize = 16, \n    linewidth = 3, \n    color = [\"lightsteelblue\", \"royalblue\"]\n)\n\n# plottar modellen\nplt.plot(\n    x, f(x), \n    linewidth = 2, \n    label = \"Modell for middelflom\", \n    color = \"red\"\n)\n\n# pynting av plot\nplt.title(\"Vassf√∏ring og middelflom\\n\", fontsize = 24)\nplt.legend(fontsize = 16)\nplt.ylabel(\"Vassf√∏ring, kubikkmeter/s\", fontsize = 16)\nplt.xlabel(\"√Ör\", fontsize = 16)\n#plt.savefig(\"Reinsnos - √•rleg maksvassf√∏ring og middelflom.png\", dpi = 300)\nplt.show()\n\n\n\n\n\n\n\n\nEkstrapolasjon - modell for framtidig middelflom\nMe kan bruka trendlinja for middelflommen som modell for √• seie noko om korleis utviklinga vil vera i √•ra framover (om utviklinga held fram som no):\n\n\nCode\nmaksvf_og_middelflom.plot(figsize = (20,9), \n                grid = True, \n                fontsize = 16, \n                linewidth = 3, \n                color = [\"lightsteelblue\", \"royalblue\"]\n               )\n\nplt.plot(x, f(x), \n         linewidth = 1.5, \n         label = \"Modell - middelflom\", \n         color = \"crimson\"\n        )\n\n# Plottar forlenginga av den line√¶re modellen\nx2 = np.arange(2022, 2101)\nplt.plot(x2, f(x2), \":\", linewidth = 3, color = \"crimson\")\n\n# pynting av plot\nplt.title(\"Vassf√∏ring og middelflom - modell fram mot 2100 \\n\", fontsize = 24)\nplt.legend(fontsize = 16)\nplt.ylabel(\"Vassf√∏ring, kubikkmeter/s\", fontsize = 16)\nplt.xlabel(\"√Ör\", fontsize = 16)\n#plt.savefig(\"Reinsnos - modellering av middelflom 2100.png\", dpi = 300)\nplt.show()"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#sjekkar-opp-mot-nve-sine-flom-data",
    "href": "posts/230202_hydrologimodellering/index.html#sjekkar-opp-mot-nve-sine-flom-data",
    "title": "Hydrologiprogrammering",
    "section": "Sjekkar opp mot NVE sine flom-data",
    "text": "Sjekkar opp mot NVE sine flom-data\nFr√• stasjonsssida til Reinsnosvatn kan me finna data om ulike typar flom.\n\n\n\nFlomdata fr√• NVE\n\n\nSer at verdien for 20-√•rsflom er 78,28 \\(m^3/s\\). Plottar inn linja \\(y=78,28\\) i samme figur som tidlegare. Bruker plt.axhline() for √• teikna horisontal linje.\n\n\nCode\n# √•ra me har data p√• middelflom\n# fr√• og med 1959 til men ikkje med 2023\nx = np.arange(1959, 2023) \n\n# finn koeffesientane til f√∏rstegradspolynomet\na, b = np.polyfit(x, maksvf_og_middelflom[\"Middelflom\"].loc[1959:2022], 1)\n\n# definerer line√¶r funksjon\ndef f(x):\n    return a*x + b\n\n# plottar dataramma\nmaksvf_og_middelflom.plot(\n    figsize = (20,9), \n    grid = True, \n    fontsize = 16, \n    linewidth = 3, \n    color = [\"lightsteelblue\", \"royalblue\"]\n)\n\n# plottar modellen\nplt.plot(\n    x, f(x), \n    linewidth = 2, \n    label = \"Modell for middelflom\", \n    color = \"red\"\n)\n\n# plottar 20-√•rsflom\nplt.axhline(\n        y = 78.28,\n        color = \"crimson\", \n        linewidth = 3, \n        linestyle = \":\", \n        label = \"20-√•rsflom\"\n)\n\n# pynting av plot\nplt.title(\"Vassf√∏ring og middelflom\\n\", fontsize = 24)\nplt.legend(fontsize = 16)\nplt.ylabel(\"Vassf√∏ring, kubikkmeter/s\", fontsize = 16)\nplt.xlabel(\"√Ör\", fontsize = 16)\n#plt.savefig(\"Reinsnos - √•rleg maksvassf√∏ring og middelflom.png\", dpi = 300)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTips til oppg√•ver\n\n\n\nPlott linjer for dei ulike flom-typane. Kor godt stemmer observasjonane med desse tala?  Kva ligg i omgrepet 20-√•rsflom?"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#utrekningar",
    "href": "posts/230202_hydrologimodellering/index.html#utrekningar",
    "title": "Hydrologiprogrammering",
    "section": "Utrekningar",
    "text": "Utrekningar\nFinn ulike verdiar per dag i √•ret over dei 104 √•ra.\n\npiv[\"min\"] = piv.min(axis = 1)\npiv[\"maks\"] = piv.max(axis = 1)\npiv[\"75%\"] = piv.quantile(q = 0.75,axis = 1)\npiv[\"median\"] = piv.median(axis = 1)\npiv[\"25%\"] = piv.quantile(q = 0.25,axis = 1)\n\npiv.head()\n\n\n\n\n\n  \n    \n      \n      Vassf√∏ring\n      min\n      maks\n      75%\n      median\n      25%\n    \n    \n      √•r\n      1917\n      1918\n      1919\n      1920\n      1921\n      1922\n      1923\n      1924\n      1925\n      1929\n      ...\n      2019\n      2020\n      2021\n      2022\n      2023\n      \n      \n      \n      \n      \n    \n    \n      doy\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1\n      NaN\n      0.751369\n      0.520992\n      0.110245\n      0.520992\n      2.268141\n      0.858653\n      NaN\n      4.303123\n      NaN\n      ...\n      2.347107\n      12.096400\n      2.466642\n      4.124214\n      2.000038\n      0.110245\n      28.48319\n      2.589138\n      1.381706\n      0.701046\n    \n    \n      2\n      NaN\n      0.751369\n      0.481094\n      0.095431\n      0.562897\n      2.268141\n      0.751369\n      NaN\n      4.003652\n      NaN\n      ...\n      2.669421\n      8.641389\n      2.288357\n      5.344579\n      1.913351\n      0.095431\n      19.01132\n      2.548025\n      1.417153\n      0.652886\n    \n    \n      3\n      NaN\n      0.701046\n      0.443164\n      0.095431\n      0.606849\n      2.166990\n      0.803893\n      NaN\n      3.858951\n      NaN\n      ...\n      2.515568\n      8.580434\n      2.122319\n      6.083396\n      1.827513\n      0.095431\n      11.99520\n      2.491543\n      1.381060\n      0.606849\n    \n    \n      4\n      NaN\n      0.701046\n      0.407161\n      0.095431\n      0.652886\n      1.973261\n      0.915689\n      NaN\n      3.717565\n      NaN\n      ...\n      2.336836\n      7.108252\n      1.954245\n      5.640584\n      1.779285\n      0.095431\n      14.41007\n      2.421806\n      1.275205\n      0.652886\n    \n    \n      5\n      NaN\n      0.652886\n      0.373045\n      0.110245\n      0.803893\n      1.703600\n      0.915689\n      NaN\n      3.444615\n      NaN\n      ...\n      2.265773\n      5.907576\n      1.806864\n      4.668677\n      1.701279\n      0.110245\n      18.95604\n      2.372195\n      1.207931\n      0.728653\n    \n  \n\n5 rows √ó 109 columns"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#plottar",
    "href": "posts/230202_hydrologimodellering/index.html#plottar",
    "title": "Hydrologiprogrammering",
    "section": "Plottar",
    "text": "Plottar\n\n# Plottar minimumsverdiar\npiv[\"min\"].plot(\n    figsize = (20, 8),\n    color = \"seagreen\", \n    linewidth = 0.8, \n    grid = False, \n    fontsize = 18, \n    legend = False,\n    label = \"Minste verdi\"\n)\n\n# PLottar maksimumsverdiar\npiv[\"maks\"].plot(\n    color = \"seagreen\", \n    linewidth = 0.8, \n    grid = False, \n    fontsize = 18, \n    legend = False,\n    label = \"St√∏rste verdi\"\n)\n\n# Fargelegg omr√•det mellom 25- og 75-persentilane\nplt.fill_between(\n    piv.index, \n    piv[\"25%\"], piv[\"75%\"], \n    facecolor='green', \n    alpha=0.2, \n    interpolate=True,\n    label = \"25% - 75%\"\n)\n\n# Plottar medianen\npiv[\"median\"].plot(\n    linewidth = 2, \n    color = \"darkgreen\",\n    label = \"Median\"\n)\n\n# Pyntar p√• plottet\nplt.xlabel(\"Dag i √•ret \\n (01. jan - 31. des)\", fontsize = 18)\nplt.ylabel(\"Vassf√∏ring i $m^3/s$\", fontsize = 18)\nplt.title(\"Vassf√∏ring - per dag i √•ret \\n\", fontsize = 24)\nplt.legend(fontsize = 16)\nplt.savefig(\"Reinsnos - vassf√∏ring per dag gjennom √•ret.png\", dpi = 300)\nplt.show()"
  },
  {
    "objectID": "posts/230202_hydrologimodellering/index.html#oppsummert",
    "href": "posts/230202_hydrologimodellering/index.html#oppsummert",
    "title": "Hydrologiprogrammering",
    "section": "Oppsummert",
    "text": "Oppsummert\nDet er mykje kjekt ein kan gjera med vassf√∏ringsdata fr√• NVE. B√•de det √• laga plott som me har gjort over, og arbeida med store datamengder som dette kan erfaringsmessig gje elevane god innsikt i samanhengar og forst√•ing for omgrep i hydrologien.\n\n\n\n\n\n\nTips til undervisinga\n\n\n\nDei elevlaga hydrogramma er eit godt utganspunkt for diskusjonar og utforsking.\n1Ô∏è‚É£ Jobb med koden saman med elevane. Lag plotta.  2Ô∏è‚É£ Be elevane om √• finna andre elver (ulik storleik, ulik geografisk plassering) og lage eigne plott.  3Ô∏è‚É£ Sj√• p√• ulike hydrogram laga av elevane (utan namn p√• vassdraget) og ha diskusjon i klassen om kva informasjon som ligg i plotta (Nord/s√∏r/aust/vest? H√∏gde? Isbre? Sn√∏smelting/regnflom? Regulering?)  4Ô∏è‚É£ Avsl√∏r namn og plassering - korleis stemte det?"
  },
  {
    "objectID": "posts/230209_simulering1/index.html",
    "href": "posts/230209_simulering1/index.html",
    "title": "Grunnleggjande simulering i NumPy",
    "section": "",
    "text": "Simulering er ein viktig del av l√¶replanen i matematikk for samfunnsfag (S1 + S2) i LK20. Mange l√¶reb√∏ker er opptatt av l√∏kker i simuleringa si. Det tar tid √• k√∏yra, kan vera meir tungt for elevane √• forst√• og kan by p√• meir feilmeldingar mtp. syntaks. Her kjem eit (kanskje av fleire) innlegg med tips til simulering med NumPy.\n\n\nFor √• simulera lagar me ein random generator. Denne kallar me for rng (random number generator). Me kan tilpassa default_rng() med √• gje han ulike argument (feks. seed for √• f√• reproduserbare tal) men i praksis i S1 og S2 er det ikkje noko me treng √• tenka p√•.\n\nimport numpy as np\nrng = np.random.default_rng()\n\nDenne generatoren kan me bruka til mange ulike simuleringar. Om me vil kasta ein terning ein gong kan me trekka eit heiltal. Det gjer me med funksjonen integers(low, high) som ligg i rng-en v√•r.\n\nterning = rng.integers(1, 7)\nprint(terning)\n\n3\n\n\n\n\n\n\n\n\nPass p√•\n\n\n\nHer vil terning = rng.integers(1, 7) gje oss\n\\[\\text{terning} \\in \\{1, 2, 3, 4, 5, 6\\}\\]\nMed andre ord \\[1 \\leq \\text{terning} < 7\\]\n\n\nOm me vil kasta fleire terningar kan me i tillegg gje inn size som argument til rng.integers\n\nterningar = rng.integers(1, 7, 10)\nprint(terningar)\n\n[1 1 4 2 5 1 6 5 3 5]\n\n\nVidare kan me rekna med resultata. Desse er lagra i ein array (ein variabeltype som minnar om lister).\nMe kan t.d. sjekka kor mange av dei 10 terningane me kasta som vart seksarar. F√∏rst kan me sjekka kva verdiar som er 6:\n\nterningar == 6\n\narray([False, False, False, False, False, False,  True, False, False,\n       False])\n\n\nDette kan me bruka til √• rekna med. Sidan False vert tolka som 0 og True vert tolka som 1 kan me finna summen av arrayen med sanningsvariablane:\n\nsum(terningar == 6)\n\n1\n\n\n\n\n\nMe trillar terning.\n\\(A\\): terningen viser 5 eller 6.\nFinn \\(P(A)\\) ved hjelp av simulering.\n\nimport numpy as np\nrng = np.random.default_rng()\n\n# tal simuleringar\nN = 10000000\n\n# triller terning N gongar\nterningar = rng.integers(1, 7, N)\n\n# finn antall femmarar og seksarar\ngunstige = sum(terningar >= 5)\n\n# finn og skriv ut relativ frekvens\nrel_frek = gunstige / N\nprint(f\"P(A) = {rel_frek:.4f}\")\n\nP(A) = 0.3332\n\n\nUt fr√• 10 000 000 simuleringar ser me at \\(P(A)=0,3333\\). Dvs. det er \\(33,33\\%\\) sannsynleg √• trilla 5 eller 6 p√• terningen.\nD√∏met over er eit problem som ikkje er vanskeleg √• l√∏ysa analytisk, og dermed ikkje veldig spennande √• bruka simulering p√•. Men om problema vert vanskelege √• rekna p√• er dei ofte ikkje s√• vanskelege √• simulera. Eit litt meir avansert problem (som er lett √• simulera) finn me i S1-eksamen fr√• v√•ren 2022:\n\nI eit spel kastar du tre terningar. Du multipliserer saman augetalet p√• terningane. Dersom dette produktet er st√∏rre enn 100, vinn du. Bestem sannsynet for √• vinne ved √• k√∏yre simuleringar. Hugs √• vise korleis du kjem fram til svaret. UDIR (2022) - Eksamen S1-V22\n\nFor √• svare p√• denne oppg√•va treng me litt meir kjennskap til korleis me kan jobba med arrays. Arrays er ein form for lister eller vektorar. Me kan utf√∏ra ulike rekneoperasjonar med dei. Me kan t.d. legga dei saman og multiplisera dei:\n\na = np.array([1, 2, 3, 4, 5, 6])\nb = np.array([6, 5, 4, 3, 2, 1])\n\nprint(a+b)\nprint(a*b)\n\n[7 7 7 7 7 7]\n[ 6 10 12 12 10  6]\n\n\nD√• har me alt me treng for √• l√∏ysa eksamensoppg√•va:\n\nimport numpy as np\nrng = np.random.default_rng()\n\n# antall simuleringar\nN = 1000000\n\n# triller 3 terningar N gongar\nt1 = rng.integers(1, 7, N)\nt2 = rng.integers(1, 7, N)\nt3 = rng.integers(1, 7, N)\n\n# finn produktet\nprod = t1* t2 * t3\n\n# tel opp kor mange av produkta som er over 100\ngunstige = sum(prod > 100)\n\n# finn og skriv ut relativ frekvens\nrel_frek = gunstige / N\nprint(f\"P(produkt over 100) = {rel_frek:.4f}\")\n\nP(produkt over 100) = 0.0928\n\n\nDet er med andre ord ca. \\(9,34\\%\\) sannsynleg √• vinna spelet."
  },
  {
    "objectID": "posts/230209_simulering1/index.html#d√∏me-p√•-bruk",
    "href": "posts/230209_simulering1/index.html#d√∏me-p√•-bruk",
    "title": "Grunnleggjande simulering i NumPy",
    "section": "D√∏me p√• bruk",
    "text": "D√∏me p√• bruk\nMe plantar 150 fr√∏. Sannsynet for at eit fr√∏ spirer er 85%.\nKva er sannsynet for at minst 130 fr√∏ spirer?\n\\(X\\): antall fr√∏ som spirer.\n\nimport numpy as np\nrng = np.random.default_rng()\n\nN = 1000000     # antall simuleringar\n\nn = 150         # antall delfors√∏k/fr√∏\np = 0.85        # sannsynet for at eitt fr√∏ spirer\n\n# ser kor mange av fr√∏a som spirer kvar simulering\nspirer = rng.binomial(n, p, N)\n\n# tell opp dei simuleringane som gjev 130+ fr√∏ som spirer\ngunstige = sum(spirer >= 130)\n\nrel_frek = gunstige / N\nprint(f\"P(X >= 130) = {rel_frek:.4f}\")\n\nP(X >= 130) = 0.3311\n\n\nSer at \\(P(X\\geq 130) = 0,3321\\)."
  },
  {
    "objectID": "posts/230209_simulering1/index.html#d√∏me-p√•-bruk-1",
    "href": "posts/230209_simulering1/index.html#d√∏me-p√•-bruk-1",
    "title": "Grunnleggjande simulering i NumPy",
    "section": "D√∏me p√• bruk",
    "text": "D√∏me p√• bruk\nDet ligg 4 daim og 7 banantwist i ei sk√•l. Du trekk 3 bitar. Kva er sannsynet for at akkurat to av desse er daim?\n\nimport numpy as np\nrng = np.random.default_rng()\n\n# antall simuleringar\nN = 1000000\n\nngood = 4      # daim i populasjonen\nnbad = 7       # banan i populasjonen\nnsample = 3    # antall bitar me trekk\n\n# simulerer\ntwist = rng.hypergeometric(ngood, nbad, nsample, size=N)\n\n# tel opp kor mange gonagar me fekk 2 daim\ngunstige = sum(twist == 2)\n\nrel_frek = gunstige / N\nprint(f\"P(X=2) = {rel_frek:.4f}\")\n\nP(X=2) = 0.2539\n\n\nDet er \\(25,5\\%\\) sannsynleg at det er akkurat to daimtwist."
  }
]